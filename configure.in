dnl Process this file with autoconf to produce a configure script.
AC_INIT(ssmtp.c)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(limits.h strings.h syslog.h unistd.h)


AC_CACHE_CHECK([for obsolete openlog],ssmtp_cv_obsolete_openlog,
	[ AC_TRY_COMPILE([#include <syslog.h> ] , [ openlog("xx",1); ] , 
	ssmtp_cv_obsolete_openlog=yes, ssmtp_cv_obsolete_openlog=no)]
)


dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_STRUCT_TM
AC_CHECK_SIZEOF(long int, 4)
if test "$ac_cv_sizeof_long_int" = "8"; then
	SSMTP_LIBDIR=lib64
else
	SSMTP_LIBDIR=lib
fi


dnl Checks for libraries.
AC_CHECK_LIB(nsl, gethostname)
AC_CHECK_LIB(socket, socket)

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gethostname socket strdup strstr)

dnl Check for optional features
AC_ARG_ENABLE(logfile, 
[  --enable-logfile        additional logging over and above syslog])
if test x$enableval = xyes ; then
	AC_DEFINE(LOGFILE)
fi
enableval=""

AC_ARG_ENABLE(rewrite-domain,
[  --disable-rewrite-domain
                          support for rewriting the sending domain])
if test x$enableval != xno ; then
	AC_DEFINE(REWRITE_DOMAIN)
fi
enableval=""

dnl Checks for --with-openssl=PATH
tryopenssldir=""
AC_ARG_WITH(openssl,
[  --with-openssl=PATH     support for secure connection to mail server
                          PATH to openssl install (default /usr/local) ],
[
    if test x$withval = xyes ; then
        tryopenssldir="/usr /usr/local"
    else
        tryopenssldir=$withval
    fi

	for dir in $tryopenssldir; do
		AC_MSG_CHECKING([for OpenSSL in $dir])
		old_LDFLAGS=$LDFLAGS
		LDFLAGS="$LDFLAGS -L$dir/$SSMTP_LIBDIR"
		old_LIBS=$LIBS
		LIBS="$LIBS -L$dir/$SSMTP_LIBDIR -lssl -lcrypto"
		old_CFLAGS=$CFLAGS
		CFLAGS="$CFLAGS -I$dir/include"

		AC_TRY_LINK([#include <openssl/ssl.h>], [SSL_library_init();],
		[ AC_MSG_RESULT([yes])
		  AC_DEFINE(HAVE_SSL)
		  OPENSSL_ENABLED="yes"
		],
		[ AC_MSG_RESULT([not found]) ])

		if test "x$OPENSSL_ENABLED" = "xyes"; then
			break;
		fi
		LDFLAGS=$old_CFLAGS
		LIBS=$old_LIBS
		CFLAGS=$old_CFLAGS
	done;

	if test "x$OPENSSL_ENABLED" != "xyes"; then
		AC_MSG_ERROR([Unable to find the OpenSSL library in '$tryopenssldir'.
					  If it is installed, specify its path using --with-openssl=/dir])
	fi
]
)

dnl Checks for --with-cyassl=PATH
CYASSL_URL="http://www.yassl.com/download.html"
trycyassldir=""
AC_ARG_WITH(cyassl,
[  --with-cyassl=PATH      support for secure connection to mail server
                          PATH to cyassl install (default /usr/local) ],
[
if test "$OPENSSL_ENABLED" != "yes"; then

    if test x$withval = xyes ; then
        trycyassldir="/usr /usr/local"
    else
        trycyassldir=$withval
    fi

	for dir in $trycyassldir; do
		AC_MSG_CHECKING([for CyaSSL in $dir])
		old_LDFLAGS=$LDFLAGS
		LDFLAGS="$LDFLAGS -Wl,-rpath,$dir/$SSMTP_LIBDIR -L$dir/$SSMTP_LIBDIR"
		old_LIBS=$LIBS
		LIBS="$LIBS -L$dir/$SSMTP_LIBDIR -lcyassl"
		old_CFLAGS=$CFLAGS
		CFLAGS="$CFLAGS -I$dir/include/cyassl -I$dir/include"

		AC_TRY_LINK([#include <cyassl/ssl.h>], [CyaSSL_Init();],
		[ AC_MSG_RESULT([yes])
		  AC_DEFINE(HAVE_SSL)
		  CYASSL_ENABLED="yes"
		],
		[ AC_MSG_RESULT([not found]) ])

		if test "x$CYASSL_ENABLED" = "xyes"; then
			break;
		fi
		LDFLAGS=$old_CFLAGS
		LIBS=$old_LIBS
		CFLAGS=$old_CFLAGS
	done;

	if test "x$CYASSL_ENABLED" != "xyes"; then
		AC_MSG_ERROR([Unable to find the CyaSSL library in '$trycyassldir'.
					  If it is installed, specify its path using --with-cyassl=/dir])
	fi

	AC_MSG_CHECKING([if CyaSSL is configured properly])
	AC_TRY_LINK([#include <cyassl/openssl/ssl.h>], [SSLeay_add_ssl_algorithms();],
	[ AC_MSG_RESULT([yes])
	AC_DEFINE(HAVE_SSL)
	CYASSL_ENABLED="yes"
	],
	[
		AC_MSG_ERROR([Unable to link with CyaSSL library in '$trycyassldir'.
					  Make sure it's configured with --enable-opensslExtra flag])
	])

fi
]
)

AC_ARG_ENABLE(inet6,
[  --enable-inet6         support for IPv6 transport])
if test x$enableval = xyes ; then
	AC_DEFINE(INET6)
fi
enableval=""

AC_ARG_ENABLE(md5auth,
[  --enable-md5auth         support for MD5 authentication])
if test x$enableval = xyes ; then
	AC_DEFINE(MD5AUTH)
	SRCS="$SRCS md5auth/md5c.c md5auth/hmac_md5.c"
fi
enableval=""
AC_SUBST(SRCS)

AC_OUTPUT(Makefile)
