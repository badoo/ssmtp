dnl Process this file with autoconf to produce a configure script.
AC_INIT(ssmtp.c)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(limits.h strings.h syslog.h unistd.h)


AC_CACHE_CHECK([for obsolete openlog],ssmtp_cv_obsolete_openlog,
	[ AC_TRY_COMPILE([#include <syslog.h> ] , [ openlog("xx",1); ] , 
	ssmtp_cv_obsolete_openlog=yes, ssmtp_cv_obsolete_openlog=no)]
)


dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_STRUCT_TM

dnl Checks for libraries.
AC_CHECK_LIB(nsl, gethostname)
AC_CHECK_LIB(socket, socket)

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gethostname socket strdup strstr)

dnl Check for optional features
AC_ARG_ENABLE(logfile, 
[  --enable-logfile        additional logging over and above syslog])
if test x$enableval = xyes ; then
	AC_DEFINE(LOGFILE)
fi
enableval=""

AC_ARG_ENABLE(rewrite-domain,
[  --disable-rewrite-domain
                          support for rewriting the sending domain])
if test x$enableval != xno ; then
	AC_DEFINE(REWRITE_DOMAIN)
fi
enableval=""

dnl Checks for --with-openssl=PATH
tryopenssldir=""
AC_ARG_WITH(openssl,
[  --with-openssl=PATH     support for secure connection to mail server
                          PATH to openssl install (default /usr/local) ],
[
    if test x$withval = xyes ; then
        tryopenssldir="/usr/local"
    else
        tryopenssldir=$withval
    fi
    AC_MSG_CHECKING([for openssl])
    LDFLAGS="$LDFLAGS -L$tryopenssldir/lib"
    LIBS="$LIBS -lssl -lcrypto"
    CFLAGS="$CFLAGS -I$tryopenssldir/include"

    AC_TRY_LINK([#include <openssl/ssl.h>], [SSL_library_init();],
        [ AC_MSG_RESULT([yes]) ],
        [ AC_MSG_ERROR([Unable to link with the openssl library.
                    If it is installed, specify its path using --with-openssl=/dir])
        ])

    AC_DEFINE(HAVE_SSL)
    OPENSSL_ENABLED="yes"
]
)

dnl Checks for --with-cyassl=PATH
CYASSL_URL="http://www.yassl.com/download.html"
trycyassldir=""
AC_ARG_WITH(cyassl,
[  --with-cyassl=PATH      support for secure connection to mail server
                          PATH to cyassl install (default /usr/local) ],
[
if test "$OPENSSL_ENABLED" != "yes"; then

    if test x$withval = xyes ; then
        trycyassldir="/usr/local"
    else
        trycyassldir=$withval
    fi
    AC_MSG_CHECKING([for cyassl])
    LDFLAGS="$LDFLAGS -L$trycyassldir/lib"
    LIBS="$LIBS -lcyassl"
    CFLAGS="$CFLAGS -I$trycyassldir/include/cyassl"

    AC_TRY_LINK([#include <openssl/ssl.h>], [CyaSSL_Init();],
        [ AC_MSG_RESULT([yes]) ],
        [ AC_MSG_ERROR([Unable to link with the CyaSSL library.
                   You can get it from $CYASSL_URL
                   If it is installed, specify its path using --with-cyassl=/dir])
        ])
    AC_DEFINE(HAVE_SSL)
fi
]
)

AC_ARG_ENABLE(inet6,
[  --enable-inet6         support for IPv6 transport])
if test x$enableval = xyes ; then
	AC_DEFINE(INET6)
fi
enableval=""

AC_ARG_ENABLE(md5auth,
[  --enable-md5auth         support for MD5 authentication])
if test x$enableval = xyes ; then
	AC_DEFINE(MD5AUTH)
	SRCS="$SRCS md5auth/md5c.c md5auth/hmac_md5.c"
fi
enableval=""
AC_SUBST(SRCS)

AC_OUTPUT(Makefile)
